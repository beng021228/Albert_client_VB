<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Albert_client_VB"
        mc:Ignorable="d"
        xmlns:Wpf="clr-namespace:Vlc.DotNet.Wpf;assembly=Vlc.DotNet.Wpf"
        Title="Albert Client Application" Height="400" Width="650" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="directional" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="direction_active_mouse.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="39.36">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="direction_inactive_mouse.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="direction_active_nomouse.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="direction_inactive_nomouse.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="direction_inactive_nomouse.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="rot_button" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="rot_inactive_nomouse.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="rot_inactive_mouse.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="rot_active_nomouse.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="rot_active_mouse.png"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="round" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush>
                        <GradientStop Color="#FFE69E9E" Offset="0"/>
                        <GradientStop Color="#FFB22121" Offset="1"/>
                        <GradientStop Color="#FF782121" Offset="0.887"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <RadialGradientBrush>
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FF234A53" Offset="0.929"/>
                        <GradientStop Color="#FF0325F9" Offset="0.874"/>
                        <GradientStop Color="#FF0022FB" Offset="0.981"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="21" CornerRadius="10" Margin="0,0,5,1" Width="22" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleX="0"/>
                                    <RotateTransform/>
                                    <TranslateTransform X="0.112"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="#FF149387" Offset="1"/>
                                            <GradientStop Color="#FF09746A" Offset="0.883"/>
                                            <GradientStop Color="#FF2DC5B7" Offset="0.757"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFF4FBEF" Offset="0"/>
                                            <GradientStop Color="#FF286604" Offset="1"/>
                                            <GradientStop Color="#FF215504" Offset="0.926"/>
                                            <GradientStop Color="#FF67D627" Offset="0.346"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFECFDEC" Offset="0"/>
                                            <GradientStop Color="#FF056E05" Offset="1"/>
                                            <GradientStop Color="#FF88F988" Offset="0.44"/>
                                            <GradientStop Color="#FF22FF22" Offset="0.602"/>
                                            <GradientStop Color="#FF1AE61A" Offset="0.709"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FF06F352" Offset="0"/>
                                            <GradientStop Color="#FF039331" Offset="1"/>
                                            <GradientStop Color="#FF8EEAAB" Offset="0.916"/>
                                            <GradientStop Color="#FF085D24" Offset="0.835"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="#FFBD1111" Offset="1"/>
                                            <GradientStop Color="#FFFD7171" Offset="0.913"/>
                                            <GradientStop Color="#FF740606" Offset="0.793"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFF52121" Offset="0"/>
                                            <GradientStop Color="#FF611010" Offset="1"/>
                                            <GradientStop Color="#FFD63E3E" Offset="0.443"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>

        <Wpf:VlcControl x:Name="myVlcControl" />

        <Grid Grid.Row="0">
            <Grid.Background>
                <VisualBrush Stretch="Uniform">
                    <VisualBrush.Visual>
                        <Image Source="{Binding ElementName=myVlcControl, Path=VideoSource}" />
                    </VisualBrush.Visual>
                </VisualBrush >
            </Grid.Background>
            <TextBlock x:Name="textBlockOpen"  TextAlignment="Center" FontSize="18" Foreground="#FF853434"><Run Text="Please, open a media file."/></TextBlock>
        </Grid>

        <StackPanel Grid.Row="1" Height="28.5" Orientation="Horizontal" VerticalAlignment="Bottom" >
            <Button Width="61" Name="buttonRtsp" Click="buttonRtsp_Click" Margin="0,8,0,0"  >Open Rtsp</Button>
            <TextBlock Margin="5,2" Name="textBlock"></TextBlock>
        </StackPanel>
        <Button x:Name="dirleft" Content="" Margin="10,0,0,58" Style="{DynamicResource directional}" Height="39" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="49"/>
        <Button x:Name="dirbck" Content="" VerticalAlignment="Bottom" Margin="50,0,0,22" Style="{DynamicResource directional}" RenderTransformOrigin="0.5,0.5" Height="34" HorizontalAlignment="Left" Width="50">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="268.589"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="dirfwd" Content="" VerticalAlignment="Bottom" Margin="50,0,0,95" Style="{DynamicResource directional}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" Width="49">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="88.646"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="dirright" Content="" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49" Margin="93,0,0,58" Style="{DynamicResource directional}" RenderTransformOrigin="0.5,0.5">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="181.296"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="pandown" Content="Button" Margin="0,0,73,26" VerticalAlignment="Bottom" Style="{DynamicResource rot_button}" Height="48" HorizontalAlignment="Right" Width="50"/>
        <Button x:Name="panup" Content="Button" Margin="0,0,73,98" Style="{DynamicResource rot_button}" RenderTransformOrigin="0.5,0.5" Height="48" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="50">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="180.407"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="panleft" Content="Button" HorizontalAlignment="Right" Margin="0,0,118,64" Width="50" Style="{DynamicResource rot_button}" RenderTransformOrigin="0.876,0.665" Height="48" VerticalAlignment="Bottom">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="89.373"/>
                    <TranslateTransform X="-26.516" Y="10.964"/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <Button x:Name="panright" Content="Button" HorizontalAlignment="Right" Margin="0,0,27,64" Width="50" Style="{DynamicResource rot_button}" RenderTransformOrigin="0.5,0.5" Height="48" VerticalAlignment="Bottom">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="270.173"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>
        <TextBox x:Name="debug_textbox" HorizontalAlignment="Left" Height="143.333" Margin="10,10,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="151.667" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" Background="#FFDBF1F0"/>
        <Button x:Name="clearbutton" Content="Clear" HorizontalAlignment="Left" Margin="16,165,0,0" VerticalAlignment="Top" Width="75"/>
        <Button x:Name="center_button" Content="" Margin="0,0,82,75" Style="{DynamicResource round}" Height="22" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="28"/>
        <Button x:Name="laserbtn" Content="Button" Margin="284,0,283,81" Style="{DynamicResource round}" Height="20" VerticalAlignment="Bottom"/>
    </Grid>
</Window>
